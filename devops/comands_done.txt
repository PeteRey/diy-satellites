exit # don't execute file, not tested
#following partialy https://www.e-tinkers.com/2018/08/how-to-properly-host-flask-application-with-nginx-and-guincorn/

#install nginx
sudo apt install nginx # version nginx/1.6.2
sudo service nginx start
#test nginx NOW, go in the browser http://127.0.0.1/
cd /etc/nginx 
#subtitute nginx.conf with the one provided 
sudo nginx -t #test the configuration
sudo service nginx reload # reloads the configuration aka applies it

# create folder to place data to be served
sudo mkdir /data /data/www
cd /data/www
copy files here (app.py  config.py  favicon.ico static/  templates/  wsgi.py)
#env things could be done, but we don't
pip3 install flask # version Flask (0.10.1)
#test on flask own server
#python3 app.py
#and go to http://127.0.0.1/5000 or what "Running on ..." says

#now we need something to conect nginx and flask
sudo pip3 install gunicorn # version gunicorn (19.9.0)
gunicorn --bind=unix:/tmp/gunicorn.sock --workers=4 app:app #try gunicorn
# go to http://127.0.0.1/ and if you see a no error it's working!
sudo nano /etc/systemd/system/gunicorn.service
 # and copy the contents of the provided gunicorn.service
sudo systemctl enable gunicorn #add to systemd to autostart on boot
sudo systemctl start gunicorn #start gunicorn now
#if you make changes to /etc/systemd/system/gunicorn.service, use this two
#sudo systemctl daemon-reload
#sudo systemctl restart gunicorn
#(also when you changes the flask app)
# for autoreload (see changes in of flask app inmeadiatly, aka good for programing and seeing the result immeadeatly) add at the end of the "ExecStart" option "--reload" (without the ") 

sudo apt install postgis # version postgis/oldoldstable 2.1.4+dfsg-3+deb8u1 armh (installs postgresql-9.4 and much more...)
sudo su postgres # switch user (a.k.a "su") to prostgres
createuser {} -P --interactive #put instead of {} the name of your user, (in the rasberry pi it is by default pi and you can get it if you do "echo $USER"(BUT in a new terminal or before the "su postgres"))
exit # to switch back to the last user
createdb cansat #
psql cansat # enter the interactiv postgresql 
 CREATE EXTENSION postgis; # wait a bit
 SELECT postgis_full_version(); # if output it's working (quit by pressing "q")
sudo pip3 install SQLAlchemy # version 1.3.8
sudo pip3 install Flask-SQLAlchemy # version 2.4.0
sudo pip3 install geoalchemy2 # version 0.6.3
sudo pip3 install psycopg2 # version 2.8.3

#for deployment
delete "--reload" from sudo nano /etc/systemd/system/gunicorn.service
delete "debug=True" en flask
